@using Model model
@using Model.Dto
@using UserInterface.AuthenticationService
@using DataAccess.Service.Impl
@inject NavigationManager nm

<style>
    .custom-card-shadow {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
    }
</style>


<div class="mt-5">
    <div class="pt-5">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-12 col-md-12">
                    <div class="card bg-dark text-white bg-image custom-card-shadow" style=" position: relative;">
                        <img src="https://fastwayindia.com/Resources/imagesTheme/FastwayTheme_m.jpg" class="card-img" alt="Stony Beach" />
                        <div class="card-img-overlay" style="background-color: rgba(100, 0, 100, 0.1); display: flex; justify-content: center; align-items: center; position: absolute; top: 0; bottom: 0; left: 0; right: 0;">
                            <div>
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>

        <section>

            <div class="d-flex justify-content-center align-content-center rounded-top" style="margin-top:-550px">
                <div class="mt-5">
                    <div class="card " style="width:900px ; background: hsla(0, 0%, 100%, 0.7);">


                        <div class="d-flex justify-content-center align-content-c enter">
                            <div class="card-header">
                                <h2 style="color:green">LOGIN</h2>
                            </div>
                        </div>


                        <div class="card-body">
                            <div class="d-flex justify-content-center align-content-center">
                                <div class="container">
                                    <div class="row">
                                        <EditForm Model="@authDto" OnValidSubmit="Login">
                                            
                                            <DataAnnotationsValidator/>
                                            <div class="form-outline mb-4">
                                                <label class="form-label" for="form2Example1">Email address</label>
                                                <input type="email" id="form2Example1" placeholder="Enter your Email" class="form-control"/>
                                                <ValidationMessage For="@(() => authDto.Email)"/>
                                            </div>

                                            <div class="form-outline mb-4">
                                                <label class="form-label" for="form2Example2">Password</label>
                                                <input type="password" id="form2Example2" placeholder="Enter your Password  " class="form-control"/>
                                                <ValidationMessage For="@(() => authDto.Password )"/>
                                            </div>



                                            <div class="d-flex justify-content-center align-content-center">
                                                <div class="btn btn-success border rounded-pill" style="width:200px">
                                                    LOGIN
                                                </div>
                                            </div>
                                            @if (!string.IsNullOrWhiteSpace(error))
                                            {
                                                <div class="alert alert-danger">
                                                    @error
                                                </div>
                                            }

                                        </EditForm>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>



                </div>
            </div>

        </section>
    </div>
</div>

@code {
    private AuthDto authDto= new ();
    private EditContext? editContext;
    private string? error = string.Empty;
    private AuthService authService;

    protected override void OnInitialized()
    {
        
        base.OnInitialized();
        editContext = new EditContext(authDto);
    }

    private async Task Login()
    {
        bool check = await authService.LoginUser(authDto);

        if (check)
        {
            nm.NavigateTo("/home");
        }
        else
        {
            error = "Error Logging in";
        }
        
            
        
            
        
        
    }

}
